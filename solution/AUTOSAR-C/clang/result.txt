.\test_autosar_minimal.c:50:9: 3: call to undeclared function 'I2c_LPI2C_InitChannel'; ISO C99 and later do not support implicit function declarations
.\test_autosar_minimal.c:54:9: 3: call to undeclared function 'I2c_FlexIO_InitChannel'; ISO C99 and later do not support implicit function declarations
└── TRANSLATION_UNIT .\test_autosar_minimal.c
    ├── MACRO_DEFINITION __llvm__
    ├── MACRO_DEFINITION __clang__
    ├── MACRO_DEFINITION __clang_major__
    ├── MACRO_DEFINITION __clang_minor__
    ├── MACRO_DEFINITION __clang_patchlevel__
    ├── MACRO_DEFINITION __clang_version__
    ├── MACRO_DEFINITION __ATOMIC_RELAXED
    ├── MACRO_DEFINITION __ATOMIC_CONSUME
    ├── MACRO_DEFINITION __ATOMIC_ACQUIRE
    ├── MACRO_DEFINITION __ATOMIC_RELEASE
    ├── MACRO_DEFINITION __ATOMIC_ACQ_REL
    ├── MACRO_DEFINITION __ATOMIC_SEQ_CST
    ├── MACRO_DEFINITION __MEMORY_SCOPE_SYSTEM
    ├── MACRO_DEFINITION __MEMORY_SCOPE_DEVICE
    ├── MACRO_DEFINITION __MEMORY_SCOPE_WRKGRP
    ├── MACRO_DEFINITION __MEMORY_SCOPE_WVFRNT
    ├── MACRO_DEFINITION __MEMORY_SCOPE_SINGLE
    ├── MACRO_DEFINITION __OPENCL_MEMORY_SCOPE_WORK_ITEM
    ├── MACRO_DEFINITION __OPENCL_MEMORY_SCOPE_WORK_GROUP
    ├── MACRO_DEFINITION __OPENCL_MEMORY_SCOPE_DEVICE
    ├── MACRO_DEFINITION __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
    ├── MACRO_DEFINITION __OPENCL_MEMORY_SCOPE_SUB_GROUP
    ├── MACRO_DEFINITION __FPCLASS_SNAN
    ├── MACRO_DEFINITION __FPCLASS_QNAN
    ├── MACRO_DEFINITION __FPCLASS_NEGINF
    ├── MACRO_DEFINITION __FPCLASS_NEGNORMAL
    ├── MACRO_DEFINITION __FPCLASS_NEGSUBNORMAL
    ├── MACRO_DEFINITION __FPCLASS_NEGZERO
    ├── MACRO_DEFINITION __FPCLASS_POSZERO
    ├── MACRO_DEFINITION __FPCLASS_POSSUBNORMAL
    ├── MACRO_DEFINITION __FPCLASS_POSNORMAL
    ├── MACRO_DEFINITION __FPCLASS_POSINF
    ├── MACRO_DEFINITION __PRAGMA_REDEFINE_EXTNAME
    ├── MACRO_DEFINITION __VERSION__
    ├── MACRO_DEFINITION __OBJC_BOOL_IS_BOOL
    ├── MACRO_DEFINITION __CONSTANT_CFSTRINGS__
    ├── MACRO_DEFINITION __clang_literal_encoding__
    ├── MACRO_DEFINITION __clang_wide_literal_encoding__
    ├── MACRO_DEFINITION __ORDER_LITTLE_ENDIAN__
    ├── MACRO_DEFINITION __ORDER_BIG_ENDIAN__
    ├── MACRO_DEFINITION __ORDER_PDP_ENDIAN__
    ├── MACRO_DEFINITION __BYTE_ORDER__
    ├── MACRO_DEFINITION __LITTLE_ENDIAN__
    ├── MACRO_DEFINITION __CHAR_BIT__
    ├── MACRO_DEFINITION __BOOL_WIDTH__
    ├── MACRO_DEFINITION __SHRT_WIDTH__
    ├── MACRO_DEFINITION __INT_WIDTH__
    ├── MACRO_DEFINITION __LONG_WIDTH__
    ├── MACRO_DEFINITION __LLONG_WIDTH__
    ├── MACRO_DEFINITION __BITINT_MAXWIDTH__
    ├── MACRO_DEFINITION __SCHAR_MAX__
    ├── MACRO_DEFINITION __SHRT_MAX__
    ├── MACRO_DEFINITION __INT_MAX__
    ├── MACRO_DEFINITION __LONG_MAX__
    ├── MACRO_DEFINITION __LONG_LONG_MAX__
    ├── MACRO_DEFINITION __WCHAR_MAX__
    ├── MACRO_DEFINITION __WCHAR_WIDTH__
    ├── MACRO_DEFINITION __WINT_MAX__
    ├── MACRO_DEFINITION __WINT_WIDTH__
    ├── MACRO_DEFINITION __INTMAX_MAX__
    ├── MACRO_DEFINITION __INTMAX_WIDTH__
    ├── MACRO_DEFINITION __SIZE_MAX__
    ├── MACRO_DEFINITION __SIZE_WIDTH__
    ├── MACRO_DEFINITION __UINTMAX_MAX__
    ├── MACRO_DEFINITION __UINTMAX_WIDTH__
    ├── MACRO_DEFINITION __PTRDIFF_MAX__
    ├── MACRO_DEFINITION __PTRDIFF_WIDTH__
    ├── MACRO_DEFINITION __INTPTR_MAX__
    ├── MACRO_DEFINITION __INTPTR_WIDTH__
    ├── MACRO_DEFINITION __UINTPTR_MAX__
    ├── MACRO_DEFINITION __UINTPTR_WIDTH__
    ├── MACRO_DEFINITION __SIZEOF_DOUBLE__
    ├── MACRO_DEFINITION __SIZEOF_FLOAT__
    ├── MACRO_DEFINITION __SIZEOF_INT__
    ├── MACRO_DEFINITION __SIZEOF_LONG__
    ├── MACRO_DEFINITION __SIZEOF_LONG_DOUBLE__
    ├── MACRO_DEFINITION __SIZEOF_LONG_LONG__
    ├── MACRO_DEFINITION __SIZEOF_POINTER__
    ├── MACRO_DEFINITION __SIZEOF_SHORT__
    ├── MACRO_DEFINITION __SIZEOF_PTRDIFF_T__
    ├── MACRO_DEFINITION __SIZEOF_SIZE_T__
    ├── MACRO_DEFINITION __SIZEOF_WCHAR_T__
    ├── MACRO_DEFINITION __SIZEOF_WINT_T__
    ├── MACRO_DEFINITION __SIZEOF_INT128__
    ├── MACRO_DEFINITION __INTMAX_TYPE__
    ├── MACRO_DEFINITION __INTMAX_FMTd__
    ├── MACRO_DEFINITION __INTMAX_FMTi__
    ├── MACRO_DEFINITION __INTMAX_C_SUFFIX__
    ├── MACRO_DEFINITION __INTMAX_C
    ├── MACRO_DEFINITION __UINTMAX_TYPE__
    ├── MACRO_DEFINITION __UINTMAX_FMTo__
    ├── MACRO_DEFINITION __UINTMAX_FMTu__
    ├── MACRO_DEFINITION __UINTMAX_FMTx__
    ├── MACRO_DEFINITION __UINTMAX_FMTX__
    ├── MACRO_DEFINITION __UINTMAX_C_SUFFIX__
    ├── MACRO_DEFINITION __UINTMAX_C
    ├── MACRO_DEFINITION __PTRDIFF_TYPE__
    ├── MACRO_DEFINITION __PTRDIFF_FMTd__
    ├── MACRO_DEFINITION __PTRDIFF_FMTi__
    ├── MACRO_DEFINITION __INTPTR_TYPE__
    ├── MACRO_DEFINITION __INTPTR_FMTd__
    ├── MACRO_DEFINITION __INTPTR_FMTi__
    ├── MACRO_DEFINITION __SIZE_TYPE__
    ├── MACRO_DEFINITION __SIZE_FMTo__
    ├── MACRO_DEFINITION __SIZE_FMTu__
    ├── MACRO_DEFINITION __SIZE_FMTx__
    ├── MACRO_DEFINITION __SIZE_FMTX__
    ├── MACRO_DEFINITION __WCHAR_TYPE__
    ├── MACRO_DEFINITION __WINT_TYPE__
    ├── MACRO_DEFINITION __SIG_ATOMIC_MAX__
    ├── MACRO_DEFINITION __SIG_ATOMIC_WIDTH__
    ├── MACRO_DEFINITION __CHAR16_TYPE__
    ├── MACRO_DEFINITION __CHAR32_TYPE__
    ├── MACRO_DEFINITION __UINTPTR_TYPE__
    ├── MACRO_DEFINITION __UINTPTR_FMTo__
    ├── MACRO_DEFINITION __UINTPTR_FMTu__
    ├── MACRO_DEFINITION __UINTPTR_FMTx__
    ├── MACRO_DEFINITION __UINTPTR_FMTX__
    ├── MACRO_DEFINITION __FLT16_DENORM_MIN__
    ├── MACRO_DEFINITION __FLT16_NORM_MAX__
    ├── MACRO_DEFINITION __FLT16_HAS_DENORM__
    ├── MACRO_DEFINITION __FLT16_DIG__
    ├── MACRO_DEFINITION __FLT16_DECIMAL_DIG__
    ├── MACRO_DEFINITION __FLT16_EPSILON__
    ├── MACRO_DEFINITION __FLT16_HAS_INFINITY__
    ├── MACRO_DEFINITION __FLT16_HAS_QUIET_NAN__
    ├── MACRO_DEFINITION __FLT16_MANT_DIG__
    ├── MACRO_DEFINITION __FLT16_MAX_10_EXP__
    ├── MACRO_DEFINITION __FLT16_MAX_EXP__
    ├── MACRO_DEFINITION __FLT16_MAX__
    ├── MACRO_DEFINITION __FLT16_MIN_10_EXP__
    ├── MACRO_DEFINITION __FLT16_MIN_EXP__
    ├── MACRO_DEFINITION __FLT16_MIN__
    ├── MACRO_DEFINITION __FLT_DENORM_MIN__
    ├── MACRO_DEFINITION __FLT_NORM_MAX__
    ├── MACRO_DEFINITION __FLT_HAS_DENORM__
    ├── MACRO_DEFINITION __FLT_DIG__
    ├── MACRO_DEFINITION __FLT_DECIMAL_DIG__
    ├── MACRO_DEFINITION __FLT_EPSILON__
    ├── MACRO_DEFINITION __FLT_HAS_INFINITY__
    ├── MACRO_DEFINITION __FLT_HAS_QUIET_NAN__
    ├── MACRO_DEFINITION __FLT_MANT_DIG__
    ├── MACRO_DEFINITION __FLT_MAX_10_EXP__
    ├── MACRO_DEFINITION __FLT_MAX_EXP__
    ├── MACRO_DEFINITION __FLT_MAX__
    ├── MACRO_DEFINITION __FLT_MIN_10_EXP__
    ├── MACRO_DEFINITION __FLT_MIN_EXP__
    ├── MACRO_DEFINITION __FLT_MIN__
    ├── MACRO_DEFINITION __DBL_DENORM_MIN__
    ├── MACRO_DEFINITION __DBL_NORM_MAX__
    ├── MACRO_DEFINITION __DBL_HAS_DENORM__
    ├── MACRO_DEFINITION __DBL_DIG__
    ├── MACRO_DEFINITION __DBL_DECIMAL_DIG__
    ├── MACRO_DEFINITION __DBL_EPSILON__
    ├── MACRO_DEFINITION __DBL_HAS_INFINITY__
    ├── MACRO_DEFINITION __DBL_HAS_QUIET_NAN__
    ├── MACRO_DEFINITION __DBL_MANT_DIG__
    ├── MACRO_DEFINITION __DBL_MAX_10_EXP__
    ├── MACRO_DEFINITION __DBL_MAX_EXP__
    ├── MACRO_DEFINITION __DBL_MAX__
    ├── MACRO_DEFINITION __DBL_MIN_10_EXP__
    ├── MACRO_DEFINITION __DBL_MIN_EXP__
    ├── MACRO_DEFINITION __DBL_MIN__
    ├── MACRO_DEFINITION __LDBL_DENORM_MIN__
    ├── MACRO_DEFINITION __LDBL_NORM_MAX__
    ├── MACRO_DEFINITION __LDBL_HAS_DENORM__
    ├── MACRO_DEFINITION __LDBL_DIG__
    ├── MACRO_DEFINITION __LDBL_DECIMAL_DIG__
    ├── MACRO_DEFINITION __LDBL_EPSILON__
    ├── MACRO_DEFINITION __LDBL_HAS_INFINITY__
    ├── MACRO_DEFINITION __LDBL_HAS_QUIET_NAN__
    ├── MACRO_DEFINITION __LDBL_MANT_DIG__
    ├── MACRO_DEFINITION __LDBL_MAX_10_EXP__
    ├── MACRO_DEFINITION __LDBL_MAX_EXP__
    ├── MACRO_DEFINITION __LDBL_MAX__
    ├── MACRO_DEFINITION __LDBL_MIN_10_EXP__
    ├── MACRO_DEFINITION __LDBL_MIN_EXP__
    ├── MACRO_DEFINITION __LDBL_MIN__
    ├── MACRO_DEFINITION __POINTER_WIDTH__
    ├── MACRO_DEFINITION __BIGGEST_ALIGNMENT__
    ├── MACRO_DEFINITION __WCHAR_UNSIGNED__
    ├── MACRO_DEFINITION __WINT_UNSIGNED__
    ├── MACRO_DEFINITION __INT8_TYPE__
    ├── MACRO_DEFINITION __INT8_FMTd__
    ├── MACRO_DEFINITION __INT8_FMTi__
    ├── MACRO_DEFINITION __INT8_C_SUFFIX__
    ├── MACRO_DEFINITION __INT8_C
    ├── MACRO_DEFINITION __INT16_TYPE__
    ├── MACRO_DEFINITION __INT16_FMTd__
    ├── MACRO_DEFINITION __INT16_FMTi__
    ├── MACRO_DEFINITION __INT16_C_SUFFIX__
    ├── MACRO_DEFINITION __INT16_C
    ├── MACRO_DEFINITION __INT32_TYPE__
    ├── MACRO_DEFINITION __INT32_FMTd__
    ├── MACRO_DEFINITION __INT32_FMTi__
    ├── MACRO_DEFINITION __INT32_C_SUFFIX__
    ├── MACRO_DEFINITION __INT32_C
    ├── MACRO_DEFINITION __INT64_TYPE__
    ├── MACRO_DEFINITION __INT64_FMTd__
    ├── MACRO_DEFINITION __INT64_FMTi__
    ├── MACRO_DEFINITION __INT64_C_SUFFIX__
    ├── MACRO_DEFINITION __INT64_C
    ├── MACRO_DEFINITION __UINT8_TYPE__
    ├── MACRO_DEFINITION __UINT8_FMTo__
    ├── MACRO_DEFINITION __UINT8_FMTu__
    ├── MACRO_DEFINITION __UINT8_FMTx__
    ├── MACRO_DEFINITION __UINT8_FMTX__
    ├── MACRO_DEFINITION __UINT8_C_SUFFIX__
    ├── MACRO_DEFINITION __UINT8_C
    ├── MACRO_DEFINITION __UINT8_MAX__
    ├── MACRO_DEFINITION __INT8_MAX__
    ├── MACRO_DEFINITION __UINT16_TYPE__
    ├── MACRO_DEFINITION __UINT16_FMTo__
    ├── MACRO_DEFINITION __UINT16_FMTu__
    ├── MACRO_DEFINITION __UINT16_FMTx__
    ├── MACRO_DEFINITION __UINT16_FMTX__
    ├── MACRO_DEFINITION __UINT16_C_SUFFIX__
    ├── MACRO_DEFINITION __UINT16_C
    ├── MACRO_DEFINITION __UINT16_MAX__
    ├── MACRO_DEFINITION __INT16_MAX__
    ├── MACRO_DEFINITION __UINT32_TYPE__
    ├── MACRO_DEFINITION __UINT32_FMTo__
    ├── MACRO_DEFINITION __UINT32_FMTu__
    ├── MACRO_DEFINITION __UINT32_FMTx__
    ├── MACRO_DEFINITION __UINT32_FMTX__
    ├── MACRO_DEFINITION __UINT32_C_SUFFIX__
    ├── MACRO_DEFINITION __UINT32_C
    ├── MACRO_DEFINITION __UINT32_MAX__
    ├── MACRO_DEFINITION __INT32_MAX__
    ├── MACRO_DEFINITION __UINT64_TYPE__
    ├── MACRO_DEFINITION __UINT64_FMTo__
    ├── MACRO_DEFINITION __UINT64_FMTu__
    ├── MACRO_DEFINITION __UINT64_FMTx__
    ├── MACRO_DEFINITION __UINT64_FMTX__
    ├── MACRO_DEFINITION __UINT64_C_SUFFIX__
    ├── MACRO_DEFINITION __UINT64_C
    ├── MACRO_DEFINITION __UINT64_MAX__
    ├── MACRO_DEFINITION __INT64_MAX__
    ├── MACRO_DEFINITION __INT_LEAST8_TYPE__
    ├── MACRO_DEFINITION __INT_LEAST8_MAX__
    ├── MACRO_DEFINITION __INT_LEAST8_WIDTH__
    ├── MACRO_DEFINITION __INT_LEAST8_FMTd__
    ├── MACRO_DEFINITION __INT_LEAST8_FMTi__
    ├── MACRO_DEFINITION __UINT_LEAST8_TYPE__
    ├── MACRO_DEFINITION __UINT_LEAST8_MAX__
    ├── MACRO_DEFINITION __UINT_LEAST8_FMTo__
    ├── MACRO_DEFINITION __UINT_LEAST8_FMTu__
    ├── MACRO_DEFINITION __UINT_LEAST8_FMTx__
    ├── MACRO_DEFINITION __UINT_LEAST8_FMTX__
    ├── MACRO_DEFINITION __INT_LEAST16_TYPE__
    ├── MACRO_DEFINITION __INT_LEAST16_MAX__
    ├── MACRO_DEFINITION __INT_LEAST16_WIDTH__
    ├── MACRO_DEFINITION __INT_LEAST16_FMTd__
    ├── MACRO_DEFINITION __INT_LEAST16_FMTi__
    ├── MACRO_DEFINITION __UINT_LEAST16_TYPE__
    ├── MACRO_DEFINITION __UINT_LEAST16_MAX__
    ├── MACRO_DEFINITION __UINT_LEAST16_FMTo__
    ├── MACRO_DEFINITION __UINT_LEAST16_FMTu__
    ├── MACRO_DEFINITION __UINT_LEAST16_FMTx__
    ├── MACRO_DEFINITION __UINT_LEAST16_FMTX__
    ├── MACRO_DEFINITION __INT_LEAST32_TYPE__
    ├── MACRO_DEFINITION __INT_LEAST32_MAX__
    ├── MACRO_DEFINITION __INT_LEAST32_WIDTH__
    ├── MACRO_DEFINITION __INT_LEAST32_FMTd__
    ├── MACRO_DEFINITION __INT_LEAST32_FMTi__
    ├── MACRO_DEFINITION __UINT_LEAST32_TYPE__
    ├── MACRO_DEFINITION __UINT_LEAST32_MAX__
    ├── MACRO_DEFINITION __UINT_LEAST32_FMTo__
    ├── MACRO_DEFINITION __UINT_LEAST32_FMTu__
    ├── MACRO_DEFINITION __UINT_LEAST32_FMTx__
    ├── MACRO_DEFINITION __UINT_LEAST32_FMTX__
    ├── MACRO_DEFINITION __INT_LEAST64_TYPE__
    ├── MACRO_DEFINITION __INT_LEAST64_MAX__
    ├── MACRO_DEFINITION __INT_LEAST64_WIDTH__
    ├── MACRO_DEFINITION __INT_LEAST64_FMTd__
    ├── MACRO_DEFINITION __INT_LEAST64_FMTi__
    ├── MACRO_DEFINITION __UINT_LEAST64_TYPE__
    ├── MACRO_DEFINITION __UINT_LEAST64_MAX__
    ├── MACRO_DEFINITION __UINT_LEAST64_FMTo__
    ├── MACRO_DEFINITION __UINT_LEAST64_FMTu__
    ├── MACRO_DEFINITION __UINT_LEAST64_FMTx__
    ├── MACRO_DEFINITION __UINT_LEAST64_FMTX__
    ├── MACRO_DEFINITION __INT_FAST8_TYPE__
    ├── MACRO_DEFINITION __INT_FAST8_MAX__
    ├── MACRO_DEFINITION __INT_FAST8_WIDTH__
    ├── MACRO_DEFINITION __INT_FAST8_FMTd__
    ├── MACRO_DEFINITION __INT_FAST8_FMTi__
    ├── MACRO_DEFINITION __UINT_FAST8_TYPE__
    ├── MACRO_DEFINITION __UINT_FAST8_MAX__
    ├── MACRO_DEFINITION __UINT_FAST8_FMTo__
    ├── MACRO_DEFINITION __UINT_FAST8_FMTu__
    ├── MACRO_DEFINITION __UINT_FAST8_FMTx__
    ├── MACRO_DEFINITION __UINT_FAST8_FMTX__
    ├── MACRO_DEFINITION __INT_FAST16_TYPE__
    ├── MACRO_DEFINITION __INT_FAST16_MAX__
    ├── MACRO_DEFINITION __INT_FAST16_WIDTH__
    ├── MACRO_DEFINITION __INT_FAST16_FMTd__
    ├── MACRO_DEFINITION __INT_FAST16_FMTi__
    ├── MACRO_DEFINITION __UINT_FAST16_TYPE__
    ├── MACRO_DEFINITION __UINT_FAST16_MAX__
    ├── MACRO_DEFINITION __UINT_FAST16_FMTo__
    ├── MACRO_DEFINITION __UINT_FAST16_FMTu__
    ├── MACRO_DEFINITION __UINT_FAST16_FMTx__
    ├── MACRO_DEFINITION __UINT_FAST16_FMTX__
    ├── MACRO_DEFINITION __INT_FAST32_TYPE__
    ├── MACRO_DEFINITION __INT_FAST32_MAX__
    ├── MACRO_DEFINITION __INT_FAST32_WIDTH__
    ├── MACRO_DEFINITION __INT_FAST32_FMTd__
    ├── MACRO_DEFINITION __INT_FAST32_FMTi__
    ├── MACRO_DEFINITION __UINT_FAST32_TYPE__
    ├── MACRO_DEFINITION __UINT_FAST32_MAX__
    ├── MACRO_DEFINITION __UINT_FAST32_FMTo__
    ├── MACRO_DEFINITION __UINT_FAST32_FMTu__
    ├── MACRO_DEFINITION __UINT_FAST32_FMTx__
    ├── MACRO_DEFINITION __UINT_FAST32_FMTX__
    ├── MACRO_DEFINITION __INT_FAST64_TYPE__
    ├── MACRO_DEFINITION __INT_FAST64_MAX__
    ├── MACRO_DEFINITION __INT_FAST64_WIDTH__
    ├── MACRO_DEFINITION __INT_FAST64_FMTd__
    ├── MACRO_DEFINITION __INT_FAST64_FMTi__
    ├── MACRO_DEFINITION __UINT_FAST64_TYPE__
    ├── MACRO_DEFINITION __UINT_FAST64_MAX__
    ├── MACRO_DEFINITION __UINT_FAST64_FMTo__
    ├── MACRO_DEFINITION __UINT_FAST64_FMTu__
    ├── MACRO_DEFINITION __UINT_FAST64_FMTx__
    ├── MACRO_DEFINITION __UINT_FAST64_FMTX__
    ├── MACRO_DEFINITION __USER_LABEL_PREFIX__
    ├── MACRO_DEFINITION __FINITE_MATH_ONLY__
    ├── MACRO_DEFINITION __GCC_DESTRUCTIVE_SIZE
    ├── MACRO_DEFINITION __GCC_CONSTRUCTIVE_SIZE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_BOOL_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_CHAR_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_CHAR16_T_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_CHAR32_T_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_WCHAR_T_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_SHORT_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_INT_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_LONG_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_LLONG_LOCK_FREE
    ├── MACRO_DEFINITION __CLANG_ATOMIC_POINTER_LOCK_FREE
    ├── MACRO_DEFINITION __NO_INLINE__
    ├── MACRO_DEFINITION __PIC__
    ├── MACRO_DEFINITION __pic__
    ├── MACRO_DEFINITION __FLT_RADIX__
    ├── MACRO_DEFINITION __DECIMAL_DIG__
    ├── MACRO_DEFINITION __GCC_ASM_FLAG_OUTPUTS__
    ├── MACRO_DEFINITION __code_model_small__
    ├── MACRO_DEFINITION __amd64__
    ├── MACRO_DEFINITION __amd64
    ├── MACRO_DEFINITION __x86_64
    ├── MACRO_DEFINITION __x86_64__
    ├── MACRO_DEFINITION __SEG_GS
    ├── MACRO_DEFINITION __SEG_FS
    ├── MACRO_DEFINITION __seg_gs
    ├── MACRO_DEFINITION __seg_fs
    ├── MACRO_DEFINITION __k8
    ├── MACRO_DEFINITION __k8__
    ├── MACRO_DEFINITION __tune_k8__
    ├── MACRO_DEFINITION __REGISTER_PREFIX__
    ├── MACRO_DEFINITION __NO_MATH_INLINES
    ├── MACRO_DEFINITION __FXSR__
    ├── MACRO_DEFINITION __SSE2__
    ├── MACRO_DEFINITION __SSE2_MATH__
    ├── MACRO_DEFINITION __SSE__
    ├── MACRO_DEFINITION __SSE_MATH__
    ├── MACRO_DEFINITION __MMX__
    ├── MACRO_DEFINITION __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
    ├── MACRO_DEFINITION __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
    ├── MACRO_DEFINITION __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
    ├── MACRO_DEFINITION __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
    ├── MACRO_DEFINITION _WIN32
    ├── MACRO_DEFINITION _WIN64
    ├── MACRO_DEFINITION _M_FP_CONTRACT
    ├── MACRO_DEFINITION _M_FP_PRECISE
    ├── MACRO_DEFINITION _MSC_VER
    ├── MACRO_DEFINITION _MSC_FULL_VER
    ├── MACRO_DEFINITION _MSC_BUILD
    ├── MACRO_DEFINITION _MSVC_CONSTEXPR_ATTRIBUTE
    ├── MACRO_DEFINITION _MSC_EXTENSIONS
    ├── MACRO_DEFINITION _INTEGRAL_MAX_BITS
    ├── MACRO_DEFINITION __STDC_NO_THREADS__
    ├── MACRO_DEFINITION _MSVC_EXECUTION_CHARACTER_SET
    ├── MACRO_DEFINITION _M_X64
    ├── MACRO_DEFINITION _M_AMD64
    ├── MACRO_DEFINITION __STDC_HOSTED__
    ├── MACRO_DEFINITION __STDC_VERSION__
    ├── MACRO_DEFINITION __STDC_UTF_16__
    ├── MACRO_DEFINITION __STDC_UTF_32__
    ├── MACRO_DEFINITION __STDC_EMBED_NOT_FOUND__
    ├── MACRO_DEFINITION __STDC_EMBED_FOUND__
    ├── MACRO_DEFINITION __STDC_EMBED_EMPTY__
    ├── INCLUSION_DIRECTIVE mock_autosar.h @ .\test_autosar_minimal.c:2:1
    ├── MACRO_DEFINITION MOCK_AUTOSAR_H @ .\mock_autosar.h:3:9
    ├── MACRO_DEFINITION FUNC @ .\mock_autosar.h:5:9
    ├── MACRO_DEFINITION CONST @ .\mock_autosar.h:6:9
    ├── MACRO_DEFINITION P2CONST @ .\mock_autosar.h:7:9
    ├── MACRO_DEFINITION P2VAR @ .\mock_autosar.h:8:9
    ├── MACRO_DEFINITION VAR @ .\mock_autosar.h:9:9
    ├── MACRO_DEFINITION AUTOMATIC @ .\mock_autosar.h:10:9
    ├── MACRO_DEFINITION I2C_APPL_CONST @ .\mock_autosar.h:11:9
    ├── MACRO_DEFINITION I2C_APPL_DATA @ .\mock_autosar.h:12:9
    ├── MACRO_DEFINITION I2C_CODE @ .\mock_autosar.h:13:9
    ├── MACRO_DEFINITION I2C_IPW_VENDOR_ID_C @ .\test_autosar_minimal.c:11:9
    ├── MACRO_DEFINITION I2C_AR_RELEASE_MAJOR_VERSION_IPW_C @ .\test_autosar_minimal.c:12:9
    ├── MACRO_DEFINITION I2C_AR_RELEASE_MINOR_VERSION_IPW_C @ .\test_autosar_minimal.c:13:9
    ├── MACRO_DEFINITION I2C_AR_RELEASE_REVISION_VERSION_IPW_C @ .\test_autosar_minimal.c:14:9
    ├── MACRO_DEFINITION I2C_SW_MAJOR_VERSION_IPW_C @ .\test_autosar_minimal.c:15:9
    ├── MACRO_DEFINITION I2C_SW_MINOR_VERSION_IPW_C @ .\test_autosar_minimal.c:16:9
    ├── MACRO_DEFINITION I2C_SW_PATCH_VERSION_IPW_C @ .\test_autosar_minimal.c:17:9
    ├── MACRO_DEFINITION LPI2C_CHANNEL @ .\test_autosar_minimal.c:19:9
    ├── MACRO_DEFINITION FLEXIO_CHANNEL @ .\test_autosar_minimal.c:20:9
    ├── MACRO_DEFINITION E_OK @ .\test_autosar_minimal.c:21:9
    ├── MACRO_DEFINITION E_NOT_OK @ .\test_autosar_minimal.c:22:9
    ├── MACRO_DEFINITION FLEXIO_MAX_NUMBER_OF_BYTES_U32 @ .\test_autosar_minimal.c:23:9
    ├── MACRO_INSTANTIATION E_OK @ .\test_autosar_minimal.c:31:28
    ├── MACRO_INSTANTIATION FUNC @ .\test_autosar_minimal.c:44:1
    ├── MACRO_INSTANTIATION CONST @ .\test_autosar_minimal.c:45:5
    ├── MACRO_INSTANTIATION P2CONST @ .\test_autosar_minimal.c:46:5
    ├── MACRO_INSTANTIATION LPI2C_CHANNEL @ .\test_autosar_minimal.c:48:9
    ├── MACRO_INSTANTIATION FUNC @ .\test_autosar_minimal.c:58:1
    ├── MACRO_INSTANTIATION P2CONST @ .\test_autosar_minimal.c:59:5
    ├── MACRO_INSTANTIATION CONST @ .\test_autosar_minimal.c:60:5
    ├── MACRO_INSTANTIATION FLEXIO_CHANNEL @ .\test_autosar_minimal.c:62:9
    ├── MACRO_INSTANTIATION FLEXIO_MAX_NUMBER_OF_BYTES_U32 @ .\test_autosar_minimal.c:64:13
    ├── MACRO_INSTANTIATION E_OK @ .\test_autosar_minimal.c:66:36
    ├── MACRO_INSTANTIATION E_OK @ .\test_autosar_minimal.c:71:32
    ├── MACRO_INSTANTIATION E_NOT_OK @ .\test_autosar_minimal.c:73:28
    ├── TYPEDEF_DECL uint8 @ .\test_autosar_minimal.c:25:23
    ├── TYPEDEF_DECL Std_ReturnType @ .\test_autosar_minimal.c:26:13
    ├── TYPEDEF_DECL I2c_HwChannelType @ .\test_autosar_minimal.c:27:13
    ├── TYPEDEF_DECL I2c_DataType @ .\test_autosar_minimal.c:28:13
    ├── TYPEDEF_DECL I2c_StatusType @ .\test_autosar_minimal.c:29:13
    ├── VAR_DECL I2cStatus @ .\test_autosar_minimal.c:31:16
    │   ├── TYPE_REF I2c_StatusType @ .\test_autosar_minimal.c:31:1
    │   └── INTEGER_LITERAL <anon> @ .\test_autosar_minimal.c:31:28
    ├── STRUCT_DECL I2c_Ipw_HwChannelConfigType @ .\test_autosar_minimal.c:33:8
    │   ├── FIELD_DECL I2c_Ipw_eChannelType @ .\test_autosar_minimal.c:34:9
    │   ├── FIELD_DECL I2c_Ipw_LPI2CHwConfig @ .\test_autosar_minimal.c:35:9
    │   └── FIELD_DECL I2c_Ipw_FlexIOCHwConfig @ .\test_autosar_minimal.c:36:9
    ├── STRUCT_DECL I2c_RequestType @ .\test_autosar_minimal.c:39:8
    │   └── FIELD_DECL u8BufferSize @ .\test_autosar_minimal.c:40:9
    ├── FUNCTION_DECL I2c_Ipw_InitChannel @ .\test_autosar_minimal.c:44:22
    │   ├── PARM_DECL u8Channel @ .\test_autosar_minimal.c:45:29
    │   │   └── TYPE_REF uint8 @ .\test_autosar_minimal.c:45:5
    │   ├── PARM_DECL pConfigPtr @ .\test_autosar_minimal.c:46:69
    │   │   └── TYPE_REF struct I2c_Ipw_HwChannelConfigType @ .\test_autosar_minimal.c:46:5
    │   └── COMPOUND_STMT <anon> @ .\test_autosar_minimal.c:47:1
    │       └── IF_STMT <anon> @ .\test_autosar_minimal.c:48:5
    │           ├── BINARY_OPERATOR == @ .\test_autosar_minimal.c:48:9
    │           │   ├── INTEGER_LITERAL <anon> @ .\test_autosar_minimal.c:48:9
    │           │   └── UNEXPOSED_EXPR <anon> @ .\test_autosar_minimal.c:48:26
    │           │       └── PAREN_EXPR <anon> @ .\test_autosar_minimal.c:48:26
    │           │           └── MEMBER_REF_EXPR I2c_Ipw_eChannelType @ .\test_autosar_minimal.c:48:39
    │           │               └── UNEXPOSED_EXPR pConfigPtr @ .\test_autosar_minimal.c:48:27
    │           │                   └── DECL_REF_EXPR pConfigPtr @ .\test_autosar_minimal.c:48:27
    │           ├── COMPOUND_STMT <anon> @ .\test_autosar_minimal.c:49:5
    │           │   └── CALL_EXPR I2c_LPI2C_InitChannel @ .\test_autosar_minimal.c:50:9
    │           │       ├── UNEXPOSED_EXPR I2c_LPI2C_InitChannel @ .\test_autosar_minimal.c:50:9
    │           │       │   └── DECL_REF_EXPR I2c_LPI2C_InitChannel @ .\test_autosar_minimal.c:50:9
    │           │       ├── UNEXPOSED_EXPR u8Channel @ .\test_autosar_minimal.c:50:31
    │           │       │   └── UNEXPOSED_EXPR u8Channel @ .\test_autosar_minimal.c:50:31
    │           │       │       └── DECL_REF_EXPR u8Channel @ .\test_autosar_minimal.c:50:31
    │           │       └── UNEXPOSED_EXPR <anon> @ .\test_autosar_minimal.c:50:42
    │           │           └── PAREN_EXPR <anon> @ .\test_autosar_minimal.c:50:42
    │           │               └── MEMBER_REF_EXPR I2c_Ipw_LPI2CHwConfig @ .\test_autosar_minimal.c:50:55
    │           │                   └── UNEXPOSED_EXPR pConfigPtr @ .\test_autosar_minimal.c:50:43
    │           │                       └── DECL_REF_EXPR pConfigPtr @ .\test_autosar_minimal.c:50:43
    │           └── COMPOUND_STMT <anon> @ .\test_autosar_minimal.c:53:5
    │               └── CALL_EXPR I2c_FlexIO_InitChannel @ .\test_autosar_minimal.c:54:9
    │                   ├── UNEXPOSED_EXPR I2c_FlexIO_InitChannel @ .\test_autosar_minimal.c:54:9
    │                   │   └── DECL_REF_EXPR I2c_FlexIO_InitChannel @ .\test_autosar_minimal.c:54:9
    │                   ├── UNEXPOSED_EXPR u8Channel @ .\test_autosar_minimal.c:54:32
    │                   │   └── UNEXPOSED_EXPR u8Channel @ .\test_autosar_minimal.c:54:32
    │                   │       └── DECL_REF_EXPR u8Channel @ .\test_autosar_minimal.c:54:32
    │                   └── UNEXPOSED_EXPR <anon> @ .\test_autosar_minimal.c:54:43
    │                       └── PAREN_EXPR <anon> @ .\test_autosar_minimal.c:54:43
    │                           └── MEMBER_REF_EXPR I2c_Ipw_FlexIOCHwConfig @ .\test_autosar_minimal.c:54:56
    │                               └── UNEXPOSED_EXPR pConfigPtr @ .\test_autosar_minimal.c:54:44
    │                                   └── DECL_REF_EXPR pConfigPtr @ .\test_autosar_minimal.c:54:44
    └── FUNCTION_DECL I2c_Ipw_CheckDataLength @ .\test_autosar_minimal.c:58:32
        ├── TYPE_REF Std_ReturnType @ .\test_autosar_minimal.c:58:1
        ├── PARM_DECL pRequest @ .\test_autosar_minimal.c:59:57
        │   └── TYPE_REF struct I2c_RequestType @ .\test_autosar_minimal.c:59:5
        ├── PARM_DECL eChannelType @ .\test_autosar_minimal.c:60:41
        │   └── TYPE_REF I2c_HwChannelType @ .\test_autosar_minimal.c:60:5
        └── COMPOUND_STMT <anon> @ .\test_autosar_minimal.c:61:1
            ├── IF_STMT <anon> @ .\test_autosar_minimal.c:62:5
            │   ├── BINARY_OPERATOR == @ .\test_autosar_minimal.c:62:9
            │   │   ├── INTEGER_LITERAL <anon> @ .\test_autosar_minimal.c:62:9
            │   │   └── UNEXPOSED_EXPR eChannelType @ .\test_autosar_minimal.c:62:27
            │   │       └── DECL_REF_EXPR eChannelType @ .\test_autosar_minimal.c:62:27
            │   ├── COMPOUND_STMT <anon> @ .\test_autosar_minimal.c:63:5
            │   │   └── IF_STMT <anon> @ .\test_autosar_minimal.c:64:9
            │   │       ├── BINARY_OPERATOR >= @ .\test_autosar_minimal.c:64:13
            │   │       │   ├── INTEGER_LITERAL <anon> @ .\test_autosar_minimal.c:64:13
            │   │       │   └── UNEXPOSED_EXPR u8BufferSize @ .\test_autosar_minimal.c:64:57
            │   │       │       └── MEMBER_REF_EXPR u8BufferSize @ .\test_autosar_minimal.c:64:57
            │   │       │           └── UNEXPOSED_EXPR pRequest @ .\test_autosar_minimal.c:64:47
            │   │       │               └── DECL_REF_EXPR pRequest @ .\test_autosar_minimal.c:64:47
            │   │       └── COMPOUND_STMT <anon> @ .\test_autosar_minimal.c:65:9
            │   │           └── RETURN_STMT <anon> @ .\test_autosar_minimal.c:66:13
            │   │               └── CSTYLE_CAST_EXPR <anon> @ .\test_autosar_minimal.c:66:20
            │   │                   ├── TYPE_REF Std_ReturnType @ .\test_autosar_minimal.c:66:21
            │   │                   └── INTEGER_LITERAL <anon> @ .\test_autosar_minimal.c:66:36
            │   └── COMPOUND_STMT <anon> @ .\test_autosar_minimal.c:70:5
            │       └── RETURN_STMT <anon> @ .\test_autosar_minimal.c:71:9
            │           └── CSTYLE_CAST_EXPR <anon> @ .\test_autosar_minimal.c:71:16
            │               ├── TYPE_REF Std_ReturnType @ .\test_autosar_minimal.c:71:17
            │               └── INTEGER_LITERAL <anon> @ .\test_autosar_minimal.c:71:32
            └── RETURN_STMT <anon> @ .\test_autosar_minimal.c:73:5
                └── CSTYLE_CAST_EXPR <anon> @ .\test_autosar_minimal.c:73:12
                    ├── TYPE_REF Std_ReturnType @ .\test_autosar_minimal.c:73:13
                    └── INTEGER_LITERAL <anon> @ .\test_autosar_minimal.c:73:28