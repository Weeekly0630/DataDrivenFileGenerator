=== STRUCT DECLARATIONS ===
struct I2c_Ipw_HwChannelConfigType /* @brief / */ { I2c_Ipw_eChannelType: I2c_StatusType, I2c_Ipw_LPI2CHwConfig: I2c_StatusType, I2c_Ipw_FlexIOCHwConfig: I2c_StatusType } @ .\test_autosar_minimal.c:58:8
struct I2c_RequestType { u8BufferSize: int } @ .\test_autosar_minimal.c:77:8

=== UNION DECLARATIONS ===

=== ENUM DECLARATIONS ===

=== TYPEDEF DECLARATIONS ===
typedef unsigned char uint8 @ .\test_autosar_minimal.c:46:23
typedef int Std_ReturnType @ .\test_autosar_minimal.c:47:23
typedef int I2c_HwChannelType @ .\test_autosar_minimal.c:48:23
typedef int I2c_DataType @ .\test_autosar_minimal.c:49:23
typedef int I2c_StatusType @ .\test_autosar_minimal.c:50:23

=== VARIABLE DECLARATIONS ===
I2c_StatusType I2cStatus = <expression> @ .\test_autosar_minimal.c:52:16

=== FUNCTION DECLARATIONS ===
void I2c_Ipw_InitChannel(uint8 u8Channel, const struct I2c_Ipw_HwChannelConfigType * pConfigPtr) /* @brief / */ @ .\test_autosar_minimal.c:87:1
Std_ReturnType I2c_Ipw_CheckDataLength(const struct I2c_RequestType * pRequest, I2c_HwChannelType eChannelType) @ .\test_autosar_minimal.c:104:1

=== MACRO DEFINITIONS ===
#define __llvm__ 1 @ 
#define __clang__ 1 @ 
#define __clang_major__ 20 @ 
#define __clang_minor__ 1 @ 
#define __clang_patchlevel__ 0 @ 
#define __clang_version__ "20.1.0 " @ 
#define __ATOMIC_RELAXED 0 @ 
#define __ATOMIC_CONSUME 1 @ 
#define __ATOMIC_ACQUIRE 2 @ 
#define __ATOMIC_RELEASE 3 @ 
#define __ATOMIC_ACQ_REL 4 @ 
#define __ATOMIC_SEQ_CST 5 @ 
#define __MEMORY_SCOPE_SYSTEM 0 @ 
#define __MEMORY_SCOPE_DEVICE 1 @ 
#define __MEMORY_SCOPE_WRKGRP 2 @ 
#define __MEMORY_SCOPE_WVFRNT 3 @ 
#define __MEMORY_SCOPE_SINGLE 4 @ 
#define __OPENCL_MEMORY_SCOPE_WORK_ITEM 0 @ 
#define __OPENCL_MEMORY_SCOPE_WORK_GROUP 1 @ 
#define __OPENCL_MEMORY_SCOPE_DEVICE 2 @ 
#define __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES 3 @ 
#define __OPENCL_MEMORY_SCOPE_SUB_GROUP 4 @ 
#define __FPCLASS_SNAN 0x0001 @ 
#define __FPCLASS_QNAN 0x0002 @ 
#define __FPCLASS_NEGINF 0x0004 @ 
#define __FPCLASS_NEGNORMAL 0x0008 @ 
#define __FPCLASS_NEGSUBNORMAL 0x0010 @ 
#define __FPCLASS_NEGZERO 0x0020 @ 
#define __FPCLASS_POSZERO 0x0040 @ 
#define __FPCLASS_POSSUBNORMAL 0x0080 @ 
#define __FPCLASS_POSNORMAL 0x0100 @ 
#define __FPCLASS_POSINF 0x0200 @ 
#define __PRAGMA_REDEFINE_EXTNAME 1 @ 
#define __VERSION__ "Clang 20.1.0" @ 
#define __OBJC_BOOL_IS_BOOL 0 @ 
#define __CONSTANT_CFSTRINGS__ 1 @ 
#define __clang_literal_encoding__ "UTF-8" @ 
#define __clang_wide_literal_encoding__ "UTF-16" @ 
#define __ORDER_LITTLE_ENDIAN__ 1234 @ 
#define __ORDER_BIG_ENDIAN__ 4321 @ 
#define __ORDER_PDP_ENDIAN__ 3412 @ 
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__ @ 
#define __LITTLE_ENDIAN__ 1 @ 
#define __CHAR_BIT__ 8 @ 
#define __BOOL_WIDTH__ 1 @ 
#define __SHRT_WIDTH__ 16 @ 
#define __INT_WIDTH__ 32 @ 
#define __LONG_WIDTH__ 32 @ 
#define __LLONG_WIDTH__ 64 @ 
#define __BITINT_MAXWIDTH__ 8388608 @ 
#define __SCHAR_MAX__ 127 @ 
#define __SHRT_MAX__ 32767 @ 
#define __INT_MAX__ 2147483647 @ 
#define __LONG_MAX__ 2147483647L @ 
#define __LONG_LONG_MAX__ 9223372036854775807LL @ 
#define __WCHAR_MAX__ 65535 @ 
#define __WCHAR_WIDTH__ 16 @ 
#define __WINT_MAX__ 65535 @ 
#define __WINT_WIDTH__ 16 @ 
#define __INTMAX_MAX__ 9223372036854775807LL @ 
#define __INTMAX_WIDTH__ 64 @ 
#define __SIZE_MAX__ 18446744073709551615ULL @ 
#define __SIZE_WIDTH__ 64 @ 
#define __UINTMAX_MAX__ 18446744073709551615ULL @ 
#define __UINTMAX_WIDTH__ 64 @ 
#define __PTRDIFF_MAX__ 9223372036854775807LL @ 
#define __PTRDIFF_WIDTH__ 64 @ 
#define __INTPTR_MAX__ 9223372036854775807LL @ 
#define __INTPTR_WIDTH__ 64 @ 
#define __UINTPTR_MAX__ 18446744073709551615ULL @ 
#define __UINTPTR_WIDTH__ 64 @ 
#define __SIZEOF_DOUBLE__ 8 @ 
#define __SIZEOF_FLOAT__ 4 @ 
#define __SIZEOF_INT__ 4 @ 
#define __SIZEOF_LONG__ 4 @ 
#define __SIZEOF_LONG_DOUBLE__ 8 @ 
#define __SIZEOF_LONG_LONG__ 8 @ 
#define __SIZEOF_POINTER__ 8 @ 
#define __SIZEOF_SHORT__ 2 @ 
#define __SIZEOF_PTRDIFF_T__ 8 @ 
#define __SIZEOF_SIZE_T__ 8 @ 
#define __SIZEOF_WCHAR_T__ 2 @ 
#define __SIZEOF_WINT_T__ 2 @ 
#define __SIZEOF_INT128__ 16 @ 
#define __INTMAX_TYPE__ long long int @ 
#define __INTMAX_FMTd__ "lld" @ 
#define __INTMAX_FMTi__ "lli" @ 
#define __INTMAX_C_SUFFIX__ LL @ 
#define __INTMAX_C ( c ) c ## LL @ 
#define __UINTMAX_TYPE__ long long unsigned int @ 
#define __UINTMAX_FMTo__ "llo" @ 
#define __UINTMAX_FMTu__ "llu" @ 
#define __UINTMAX_FMTx__ "llx" @ 
#define __UINTMAX_FMTX__ "llX" @ 
#define __UINTMAX_C_SUFFIX__ ULL @ 
#define __UINTMAX_C ( c ) c ## ULL @ 
#define __PTRDIFF_TYPE__ long long int @ 
#define __PTRDIFF_FMTd__ "lld" @ 
#define __PTRDIFF_FMTi__ "lli" @ 
#define __INTPTR_TYPE__ long long int @ 
#define __INTPTR_FMTd__ "lld" @ 
#define __INTPTR_FMTi__ "lli" @ 
#define __SIZE_TYPE__ long long unsigned int @ 
#define __SIZE_FMTo__ "llo" @ 
#define __SIZE_FMTu__ "llu" @ 
#define __SIZE_FMTx__ "llx" @ 
#define __SIZE_FMTX__ "llX" @ 
#define __WCHAR_TYPE__ unsigned short @ 
#define __WINT_TYPE__ unsigned short @ 
#define __SIG_ATOMIC_MAX__ 2147483647 @ 
#define __SIG_ATOMIC_WIDTH__ 32 @ 
#define __CHAR16_TYPE__ unsigned short @ 
#define __CHAR32_TYPE__ unsigned int @ 
#define __UINTPTR_TYPE__ long long unsigned int @ 
#define __UINTPTR_FMTo__ "llo" @ 
#define __UINTPTR_FMTu__ "llu" @ 
#define __UINTPTR_FMTx__ "llx" @ 
#define __UINTPTR_FMTX__ "llX" @ 
#define __FLT16_DENORM_MIN__ 5.9604644775390625e-8F16 @ 
#define __FLT16_NORM_MAX__ 6.5504e+4F16 @ 
#define __FLT16_HAS_DENORM__ 1 @ 
#define __FLT16_DIG__ 3 @ 
#define __FLT16_DECIMAL_DIG__ 5 @ 
#define __FLT16_EPSILON__ 9.765625e-4F16 @ 
#define __FLT16_HAS_INFINITY__ 1 @ 
#define __FLT16_HAS_QUIET_NAN__ 1 @ 
#define __FLT16_MANT_DIG__ 11 @ 
#define __FLT16_MAX_10_EXP__ 4 @ 
#define __FLT16_MAX_EXP__ 16 @ 
#define __FLT16_MAX__ 6.5504e+4F16 @ 
#define __FLT16_MIN_10_EXP__ ( - 4 ) @ 
#define __FLT16_MIN_EXP__ ( - 13 ) @ 
#define __FLT16_MIN__ 6.103515625e-5F16 @ 
#define __FLT_DENORM_MIN__ 1.40129846e-45F @ 
#define __FLT_NORM_MAX__ 3.40282347e+38F @ 
#define __FLT_HAS_DENORM__ 1 @ 
#define __FLT_DIG__ 6 @ 
#define __FLT_DECIMAL_DIG__ 9 @ 
#define __FLT_EPSILON__ 1.19209290e-7F @ 
#define __FLT_HAS_INFINITY__ 1 @ 
#define __FLT_HAS_QUIET_NAN__ 1 @ 
#define __FLT_MANT_DIG__ 24 @ 
#define __FLT_MAX_10_EXP__ 38 @ 
#define __FLT_MAX_EXP__ 128 @ 
#define __FLT_MAX__ 3.40282347e+38F @ 
#define __FLT_MIN_10_EXP__ ( - 37 ) @ 
#define __FLT_MIN_EXP__ ( - 125 ) @ 
#define __FLT_MIN__ 1.17549435e-38F @ 
#define __DBL_DENORM_MIN__ 4.9406564584124654e-324 @ 
#define __DBL_NORM_MAX__ 1.7976931348623157e+308 @ 
#define __DBL_HAS_DENORM__ 1 @ 
#define __DBL_DIG__ 15 @ 
#define __DBL_DECIMAL_DIG__ 17 @ 
#define __DBL_EPSILON__ 2.2204460492503131e-16 @ 
#define __DBL_HAS_INFINITY__ 1 @ 
#define __DBL_HAS_QUIET_NAN__ 1 @ 
#define __DBL_MANT_DIG__ 53 @ 
#define __DBL_MAX_10_EXP__ 308 @ 
#define __DBL_MAX_EXP__ 1024 @ 
#define __DBL_MAX__ 1.7976931348623157e+308 @ 
#define __DBL_MIN_10_EXP__ ( - 307 ) @ 
#define __DBL_MIN_EXP__ ( - 1021 ) @ 
#define __DBL_MIN__ 2.2250738585072014e-308 @ 
#define __LDBL_DENORM_MIN__ 4.9406564584124654e-324L @ 
#define __LDBL_NORM_MAX__ 1.7976931348623157e+308L @ 
#define __LDBL_HAS_DENORM__ 1 @ 
#define __LDBL_DIG__ 15 @ 
#define __LDBL_DECIMAL_DIG__ 17 @ 
#define __LDBL_EPSILON__ 2.2204460492503131e-16L @ 
#define __LDBL_HAS_INFINITY__ 1 @ 
#define __LDBL_HAS_QUIET_NAN__ 1 @ 
#define __LDBL_MANT_DIG__ 53 @ 
#define __LDBL_MAX_10_EXP__ 308 @ 
#define __LDBL_MAX_EXP__ 1024 @ 
#define __LDBL_MAX__ 1.7976931348623157e+308L @ 
#define __LDBL_MIN_10_EXP__ ( - 307 ) @ 
#define __LDBL_MIN_EXP__ ( - 1021 ) @ 
#define __LDBL_MIN__ 2.2250738585072014e-308L @ 
#define __POINTER_WIDTH__ 64 @ 
#define __BIGGEST_ALIGNMENT__ 16 @ 
#define __WCHAR_UNSIGNED__ 1 @ 
#define __WINT_UNSIGNED__ 1 @ 
#define __INT8_TYPE__ signed char @ 
#define __INT8_FMTd__ "hhd" @ 
#define __INT8_FMTi__ "hhi" @ 
#define __INT8_C_SUFFIX__  @ 
#define __INT8_C ( c ) c @ 
#define __INT16_TYPE__ short @ 
#define __INT16_FMTd__ "hd" @ 
#define __INT16_FMTi__ "hi" @ 
#define __INT16_C_SUFFIX__  @ 
#define __INT16_C ( c ) c @ 
#define __INT32_TYPE__ int @ 
#define __INT32_FMTd__ "d" @ 
#define __INT32_FMTi__ "i" @ 
#define __INT32_C_SUFFIX__  @ 
#define __INT32_C ( c ) c @ 
#define __INT64_TYPE__ long long int @ 
#define __INT64_FMTd__ "lld" @ 
#define __INT64_FMTi__ "lli" @ 
#define __INT64_C_SUFFIX__ LL @ 
#define __INT64_C ( c ) c ## LL @ 
#define __UINT8_TYPE__ unsigned char @ 
#define __UINT8_FMTo__ "hho" @ 
#define __UINT8_FMTu__ "hhu" @ 
#define __UINT8_FMTx__ "hhx" @ 
#define __UINT8_FMTX__ "hhX" @ 
#define __UINT8_C_SUFFIX__  @ 
#define __UINT8_C ( c ) c @ 
#define __UINT8_MAX__ 255 @ 
#define __INT8_MAX__ 127 @ 
#define __UINT16_TYPE__ unsigned short @ 
#define __UINT16_FMTo__ "ho" @ 
#define __UINT16_FMTu__ "hu" @ 
#define __UINT16_FMTx__ "hx" @ 
#define __UINT16_FMTX__ "hX" @ 
#define __UINT16_C_SUFFIX__  @ 
#define __UINT16_C ( c ) c @ 
#define __UINT16_MAX__ 65535 @ 
#define __INT16_MAX__ 32767 @ 
#define __UINT32_TYPE__ unsigned int @ 
#define __UINT32_FMTo__ "o" @ 
#define __UINT32_FMTu__ "u" @ 
#define __UINT32_FMTx__ "x" @ 
#define __UINT32_FMTX__ "X" @ 
#define __UINT32_C_SUFFIX__ U @ 
#define __UINT32_C ( c ) c ## U @ 
#define __UINT32_MAX__ 4294967295U @ 
#define __INT32_MAX__ 2147483647 @ 
#define __UINT64_TYPE__ long long unsigned int @ 
#define __UINT64_FMTo__ "llo" @ 
#define __UINT64_FMTu__ "llu" @ 
#define __UINT64_FMTx__ "llx" @ 
#define __UINT64_FMTX__ "llX" @ 
#define __UINT64_C_SUFFIX__ ULL @ 
#define __UINT64_C ( c ) c ## ULL @ 
#define __UINT64_MAX__ 18446744073709551615ULL @ 
#define __INT64_MAX__ 9223372036854775807LL @ 
#define __INT_LEAST8_TYPE__ signed char @ 
#define __INT_LEAST8_MAX__ 127 @ 
#define __INT_LEAST8_WIDTH__ 8 @ 
#define __INT_LEAST8_FMTd__ "hhd" @ 
#define __INT_LEAST8_FMTi__ "hhi" @ 
#define __UINT_LEAST8_TYPE__ unsigned char @ 
#define __UINT_LEAST8_MAX__ 255 @ 
#define __UINT_LEAST8_FMTo__ "hho" @ 
#define __UINT_LEAST8_FMTu__ "hhu" @ 
#define __UINT_LEAST8_FMTx__ "hhx" @ 
#define __UINT_LEAST8_FMTX__ "hhX" @ 
#define __INT_LEAST16_TYPE__ short @ 
#define __INT_LEAST16_MAX__ 32767 @ 
#define __INT_LEAST16_WIDTH__ 16 @ 
#define __INT_LEAST16_FMTd__ "hd" @ 
#define __INT_LEAST16_FMTi__ "hi" @ 
#define __UINT_LEAST16_TYPE__ unsigned short @ 
#define __UINT_LEAST16_MAX__ 65535 @ 
#define __UINT_LEAST16_FMTo__ "ho" @ 
#define __UINT_LEAST16_FMTu__ "hu" @ 
#define __UINT_LEAST16_FMTx__ "hx" @ 
#define __UINT_LEAST16_FMTX__ "hX" @ 
#define __INT_LEAST32_TYPE__ int @ 
#define __INT_LEAST32_MAX__ 2147483647 @ 
#define __INT_LEAST32_WIDTH__ 32 @ 
#define __INT_LEAST32_FMTd__ "d" @ 
#define __INT_LEAST32_FMTi__ "i" @ 
#define __UINT_LEAST32_TYPE__ unsigned int @ 
#define __UINT_LEAST32_MAX__ 4294967295U @ 
#define __UINT_LEAST32_FMTo__ "o" @ 
#define __UINT_LEAST32_FMTu__ "u" @ 
#define __UINT_LEAST32_FMTx__ "x" @ 
#define __UINT_LEAST32_FMTX__ "X" @ 
#define __INT_LEAST64_TYPE__ long long int @ 
#define __INT_LEAST64_MAX__ 9223372036854775807LL @ 
#define __INT_LEAST64_WIDTH__ 64 @ 
#define __INT_LEAST64_FMTd__ "lld" @ 
#define __INT_LEAST64_FMTi__ "lli" @ 
#define __UINT_LEAST64_TYPE__ long long unsigned int @ 
#define __UINT_LEAST64_MAX__ 18446744073709551615ULL @ 
#define __UINT_LEAST64_FMTo__ "llo" @ 
#define __UINT_LEAST64_FMTu__ "llu" @ 
#define __UINT_LEAST64_FMTx__ "llx" @ 
#define __UINT_LEAST64_FMTX__ "llX" @ 
#define __INT_FAST8_TYPE__ signed char @ 
#define __INT_FAST8_MAX__ 127 @ 
#define __INT_FAST8_WIDTH__ 8 @ 
#define __INT_FAST8_FMTd__ "hhd" @ 
#define __INT_FAST8_FMTi__ "hhi" @ 
#define __UINT_FAST8_TYPE__ unsigned char @ 
#define __UINT_FAST8_MAX__ 255 @ 
#define __UINT_FAST8_FMTo__ "hho" @ 
#define __UINT_FAST8_FMTu__ "hhu" @ 
#define __UINT_FAST8_FMTx__ "hhx" @ 
#define __UINT_FAST8_FMTX__ "hhX" @ 
#define __INT_FAST16_TYPE__ short @ 
#define __INT_FAST16_MAX__ 32767 @ 
#define __INT_FAST16_WIDTH__ 16 @ 
#define __INT_FAST16_FMTd__ "hd" @ 
#define __INT_FAST16_FMTi__ "hi" @ 
#define __UINT_FAST16_TYPE__ unsigned short @ 
#define __UINT_FAST16_MAX__ 65535 @ 
#define __UINT_FAST16_FMTo__ "ho" @ 
#define __UINT_FAST16_FMTu__ "hu" @ 
#define __UINT_FAST16_FMTx__ "hx" @ 
#define __UINT_FAST16_FMTX__ "hX" @ 
#define __INT_FAST32_TYPE__ int @ 
#define __INT_FAST32_MAX__ 2147483647 @ 
#define __INT_FAST32_WIDTH__ 32 @ 
#define __INT_FAST32_FMTd__ "d" @ 
#define __INT_FAST32_FMTi__ "i" @ 
#define __UINT_FAST32_TYPE__ unsigned int @ 
#define __UINT_FAST32_MAX__ 4294967295U @ 
#define __UINT_FAST32_FMTo__ "o" @ 
#define __UINT_FAST32_FMTu__ "u" @ 
#define __UINT_FAST32_FMTx__ "x" @ 
#define __UINT_FAST32_FMTX__ "X" @ 
#define __INT_FAST64_TYPE__ long long int @ 
#define __INT_FAST64_MAX__ 9223372036854775807LL @ 
#define __INT_FAST64_WIDTH__ 64 @ 
#define __INT_FAST64_FMTd__ "lld" @ 
#define __INT_FAST64_FMTi__ "lli" @ 
#define __UINT_FAST64_TYPE__ long long unsigned int @ 
#define __UINT_FAST64_MAX__ 18446744073709551615ULL @ 
#define __UINT_FAST64_FMTo__ "llo" @ 
#define __UINT_FAST64_FMTu__ "llu" @ 
#define __UINT_FAST64_FMTx__ "llx" @ 
#define __UINT_FAST64_FMTX__ "llX" @ 
#define __USER_LABEL_PREFIX__  @ 
#define __FINITE_MATH_ONLY__ 0 @ 
#define __GCC_DESTRUCTIVE_SIZE 64 @ 
#define __GCC_CONSTRUCTIVE_SIZE 64 @ 
#define __CLANG_ATOMIC_BOOL_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_CHAR_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_CHAR16_T_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_CHAR32_T_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_WCHAR_T_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_SHORT_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_INT_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_LONG_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_LLONG_LOCK_FREE 2 @ 
#define __CLANG_ATOMIC_POINTER_LOCK_FREE 2 @ 
#define __NO_INLINE__ 1 @ 
#define __PIC__ 2 @ 
#define __pic__ 2 @ 
#define __FLT_RADIX__ 2 @ 
#define __DECIMAL_DIG__ __LDBL_DECIMAL_DIG__ @ 
#define __GCC_ASM_FLAG_OUTPUTS__ 1 @ 
#define __code_model_small__ 1 @ 
#define __amd64__ 1 @ 
#define __amd64 1 @ 
#define __x86_64 1 @ 
#define __x86_64__ 1 @ 
#define __SEG_GS 1 @ 
#define __SEG_FS 1 @ 
#define __seg_gs __attribute__ ( ( address_space ( 256 ) ) ) @ 
#define __seg_fs __attribute__ ( ( address_space ( 257 ) ) ) @ 
#define __k8 1 @ 
#define __k8__ 1 @ 
#define __tune_k8__ 1 @ 
#define __REGISTER_PREFIX__  @ 
#define __NO_MATH_INLINES 1 @ 
#define __FXSR__ 1 @ 
#define __SSE2__ 1 @ 
#define __SSE2_MATH__ 1 @ 
#define __SSE__ 1 @ 
#define __SSE_MATH__ 1 @ 
#define __MMX__ 1 @ 
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1 @ 
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1 @ 
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1 @ 
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1 @ 
#define _WIN32 1 @ 
#define _WIN64 1 @ 
#define _M_FP_CONTRACT 1 @ 
#define _M_FP_PRECISE 1 @ 
#define _MSC_VER 1933 @ 
#define _MSC_FULL_VER 193300000 @ 
#define _MSC_BUILD 1 @ 
#define _MSVC_CONSTEXPR_ATTRIBUTE 1 @ 
#define _MSC_EXTENSIONS 1 @ 
#define _INTEGRAL_MAX_BITS 64 @ 
#define __STDC_NO_THREADS__ 1 @ 
#define _MSVC_EXECUTION_CHARACTER_SET 65001 @ 
#define _M_X64 100 @ 
#define _M_AMD64 100 @ 
#define __STDC_HOSTED__ 1 @ 
#define __STDC_VERSION__ 199901L @ 
#define __STDC_UTF_16__ 1 @ 
#define __STDC_UTF_32__ 1 @ 
#define __STDC_EMBED_NOT_FOUND__ 0 @ 
#define __STDC_EMBED_FOUND__ 1 @ 
#define __STDC_EMBED_EMPTY__ 2 @ 
#define MOCK_AUTOSAR_H  @ .\mock_autosar.h:3:9
#define FUNC ( rettype , memclass ) rettype @ .\mock_autosar.h:5:9
#define CONST ( type , memclass ) type @ .\mock_autosar.h:6:9
#define P2CONST ( type , memclass , ptrclass ) const struct type * @ .\mock_autosar.h:7:9
#define P2VAR ( type , memclass , ptrclass ) struct type * @ .\mock_autosar.h:8:9
#define VAR ( type , memclass ) type @ .\mock_autosar.h:9:9
#define AUTOMATIC  @ .\mock_autosar.h:10:9
#define I2C_APPL_CONST  @ .\mock_autosar.h:11:9
#define I2C_APPL_DATA  @ .\mock_autosar.h:12:9
#define I2C_CODE  @ .\mock_autosar.h:13:9
#define I2C_IPW_VENDOR_ID_C 43 /* AUTOSAR-style minimal test file for Clang AST parsing #include "CDD_I2c.h" #include "I2c_Ipw.h" #include "I2c_FlexIO.h" #include "I2c_LPI2C.h" */ @ .\test_autosar_minimal.c:11:9
#define I2C_AR_RELEASE_MAJOR_VERSION_IPW_C 4 /* #include "I2c_LPI2C.h" */ @ .\test_autosar_minimal.c:12:9
#define I2C_AR_RELEASE_MINOR_VERSION_IPW_C 2 @ .\test_autosar_minimal.c:13:9
#define I2C_AR_RELEASE_REVISION_VERSION_IPW_C 2 @ .\test_autosar_minimal.c:14:9
#define I2C_SW_MAJOR_VERSION_IPW_C 1 @ .\test_autosar_minimal.c:15:9
#define I2C_SW_MINOR_VERSION_IPW_C 0 @ .\test_autosar_minimal.c:16:9
#define I2C_SW_PATCH_VERSION_IPW_C 1 @ .\test_autosar_minimal.c:17:9
#define LPI2C_CHANNEL 1 /* @brief / */ @ .\test_autosar_minimal.c:23:9
#define FLEXIO_CHANNEL 2 /* @brief / */ @ .\test_autosar_minimal.c:29:9
#define E_OK 0 /* @brief / */ @ .\test_autosar_minimal.c:34:9
#define E_NOT_OK 1 /* @brief / */ @ .\test_autosar_minimal.c:39:9
#define FLEXIO_MAX_NUMBER_OF_BYTES_U32 255 /* @brief / */ @ .\test_autosar_minimal.c:44:9
